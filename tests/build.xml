<?xml version="1.0" encoding="UTF-8"?>
<project name='copper_tests'
		 basedir='.'
		 xmlns:if="ant:if"
		 xmlns:unless="ant:unless">
	<property environment='env'/>
	<property name='src_src' location='../src'/>
	<property name='src' location='../bin'/>
	<property name='specs' location='../doc/specs'/>
	<property name='grammars' location='grammars'/>
	<property name='build_package' value='parsers'/>
	<property name='build' location='.'/>
	<property name='etcbase' location='..'/>
	<property name='dist' location='../jar'/>
	<property name='debug' value='false'/>
	
	<path id='tests_and_src'>
		<pathelement path='${src}'/>
		<pathelement path='${etcbase}'/>
		<pathelement path='.'/>
	</path>
		
	<!-- Uncomment this line and comment the one below to run Copper from JARs rather than unpackaged class files. -->
	<!--<taskdef name='copper' classpath='${dist}/CopperCompiler.jar' classname='edu.umn.cs.melt.copper.ant.CopperAntTask'/>-->
	<taskdef name='copper' classpathref='tests_and_src' classname='edu.umn.cs.melt.copper.ant.CopperAntTask'/>

	<target name='MakeBuildPackageDir' depends=''>
	  <mkdir dir='${build_package}'/>
	</target>

	<!-- Auxiliary targets; not to be run directly -->
	<target name='TestCupGrammar' depends='MakeBuildPackageDir'>
		<property name='skin' value='CUP'/>

		<!-- Call the target with a value like '/test_features' for specifying a subdirectory of 'grammars'. -->
		<property name='testGroup' value=''/>

		<!-- Call the target with a value like
			 'HTML', 'XML', 'XML_SPEC', 'PLAIN',
			 for activating the dump mode.
		-->
		<property name='dumpMode' value='NONE'/>
		<condition property='activateDumpMode'>
			<not>
				<equals arg1='${dumpMode}' arg2='NONE'/>
			</not>
		</condition>

		<copper if:set='activateDumpMode'
				outputFile='${build_package}/${grammarName}Parser.java'
				useSkin='${skin}'
				useEngine='${engine}'
				dump='ON'
				dumpFile='${build_package}/${grammarName}.html'
				dumpFormat='${dumpMode}'>
			<inputs dir='${grammars}${testGroup}' includes='${grammarName}.x'/>
		</copper>
		<copper unless:set='activateDumpMode'
				outputFile='${build_package}/${grammarName}Parser.java'
				useSkin='${skin}'
				useEngine='${engine}'>
			<inputs dir='${grammars}${testGroup}' includes='${grammarName}.x'/>
		</copper>

		<javac includeantruntime='false' source='1.5' target='1.5' debug='${debug}' srcdir='${build}' destdir='${build}' includes='${build_package}/${grammarName}Parser.java' classpathref='tests_and_src'/>
	</target>

	<target name='TestXMLGrammar' depends='MakeBuildPackageDir'>
		<property name='skin' value='XML'/>
		<copper outputFile='${build_package}/${grammarName}Parser.java' useSkin='${skin}' useEngine='${engine}'>
			<inputs dir='${grammars}' includes='${grammarName}.xml'/>
		</copper>
		<javac includeantruntime='false' source='1.5' target='1.5' debug='${debug}' srcdir='${build}' destdir='${build}' includes='${build_package}/${grammarName}Parser.java' classpathref='tests_and_src'/>
	</target>
	
	<target name='TestMDA' depends=''>
		<property name='skin' value='XML'/>
		<copper outputFile='${build_package}/${grammarName}Parser.java' useSkin='${skin}' useEngine='${engine}' runMDA='true'>
			<inputs dir='${grammars}/mda' includes='${grammarName}.xml'/>
		</copper>
	</target>

	<target name='SelfTestParser' depends='TestCupGrammar'>
		<java classname='${build_package}.${grammarName}Parser'
			  fork='false'
			  failonerror='yes'
			  classpathref='tests_and_src'>
		</java>
	</target>
	
	<!-- Test grammar targets; to be run directly -->
	
	<target name='BlazonGrammar' depends=''>
		<property name='grammarName' value='BlazonGrammar'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>

	<target name='CExprGrammar' depends=''>
		<property name='grammarName' value='CExprGrammar'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>
	
	<target name='Grammar3p23' depends=''>
		<property name='grammarName' value='Grammar3p23'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>

	<target name='Grammar3p23XML' depends=''>
		<property name='grammarName' value='Grammar3p23XML'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestXMLGrammar'/>
	</target>

	<target name='Grammar3p26' depends=''>
		<property name='grammarName' value='Grammar3p26'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>

	<target name='MathGrammar' depends=''>
		<property name='grammarName' value='MathGrammar'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>

	<target name='MiniJavaGrammar' depends=''>
		<property name='grammarName' value='MiniJavaGrammar'/>
		<property name='runVerbose' value='true'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>

	<target name='Tutorial_EBNF_to_Copper' depends=''>
		<property name='grammarName' value='Tutorial_EBNF_to_Copper'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestCupGrammar'/>
	</target>

	<target name='TestPrecedences01' depends=''>
		<property name='grammarName' value='TestPrecedences01'/>
		<property name='testGroup' value='/test_features'/>
		<property name='engine' value='SINGLE'/>
		<property name='dumpMode' value='HTML'/>
		<ant target='SelfTestParser'/>
	</target>

	<target name='TestPrecedences02' depends=''>
		<property name='grammarName' value='TestPrecedences02'/>
		<property name='testGroup' value='/test_features'/>
		<property name='engine' value='SINGLE'/>
		<property name='dumpMode' value='HTML'/>
		<ant target='SelfTestParser'/>
	</target>

	<target name='MDAPassing' depends=''>
		<property name='grammarName' value='MDAPassing'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestMDA'/>
	</target>

	<target name='MDAFailing' depends=''>
		<property name='grammarName' value='MDAFailing'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestMDA'/>
	</target>

	<target name='MDALookaheadSpillageOnly' depends=''>
		<property name='grammarName' value='MDALookaheadSpillageOnly'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestMDA'/>
	</target>
	
	<target name='MDAFollowSpillageOnly' depends=''>
		<property name='grammarName' value='MDAFollowSpillageOnly'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestMDA'/>
	</target>

	<target name='MDANonILSubsetOnly' depends=''>
		<property name='grammarName' value='MDANonILSubsetOnly'/>
		<property name='engine' value='SINGLE'/>
		<ant target='TestMDA'/>
	</target>

	<target name='clean' depends=''>
		<delete verbose='true'>
			<fileset dir='${build_package}' includes='*Parser*.java'/>
			<fileset dir='${build_package}' includes='*Parser*.class'/>
		</delete>
	</target>
</project>

